-- Blox Fruits: Fruit Detection and Server Hopping Script

local desiredFruits = {"T-Rex", "Leopard", "Kitsune", "Dragon"} -- List of fruits you want to detect

-- Function to check if the fruit is in the desired list
local function isDesiredFruit(fruitName)
    for _, fruit in pairs(desiredFruits) do
        if fruitName == fruit then
            return true
        end
    end
    return false
end

-- Function to display messages on the screen
local function showMessage(message)
    local gui = Instance.new("ScreenGui")
    local textLabel = Instance.new("TextLabel")

    gui.Parent = game.CoreGui
    textLabel.Parent = gui
    textLabel.Text = message
    textLabel.Size = UDim2.new(0, 500, 0, 50)
    textLabel.Position = UDim2.new(0.5, -250, 0.1, 0)
    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    textLabel.BackgroundTransparency = 0.5
    textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)

    wait(5) -- Show the message for 5 seconds
    gui:Destroy() -- Remove the message
end

-- Example function that handles detected fruits
local function onFruitDetected(fruitName)
    if isDesiredFruit(fruitName) then
        showMessage("Fruit found! Getting fruit...")
        print("Desired fruit found: " .. fruitName)
        -- Implement the actions you want to take, e.g., teleport to fruit
        -- For example: TeleportService:Teleport(placeId)
    else
        showMessage("Your fruit is not found, hopping server...")
        print("Fruit not desired: " .. fruitName)
    end
end

-- Function to hop servers (improved with delay and avoiding same server)
local function hopServers()
    local TeleportService = game:GetService("TeleportService")
    local currentPlaceId = game.PlaceId
    local player = game.Players.LocalPlayer

    -- Get the current server ID to avoid rejoining the same server
    local currentServerId = game.GameId
    print("Current server ID: " .. currentServerId)

    -- Add a random delay to help avoid rejoining the same server
    wait(5)  -- Adjust delay as needed (in seconds)

    -- Hop to a different server (use currentPlaceId to teleport within the same game)
    print("Hopping to another server...")
    TeleportService:Teleport(currentPlaceId, player)

    -- Wait to ensure the server has fully loaded
    wait(10)  -- Adjust this delay to match the server load time
end

-- Simulate fruit detection (replace with actual game logic)
local fruitsInGame = {"T-Rex", "Dough", "Leopard", "Dragon", "Magma"} -- Example fruits in the game
for _, fruit in pairs(fruitsInGame) do
    onFruitDetected(fruit)
end

-- Example: Hop servers after fruit detection
hopServers()
